@using TotalModel.Models;
@using TotalPortal.Configuration;

@{Layout = "~/Views/Shared/_LayoutPopup.cshtml";}


@(Html.Kendo().Grid<HandlingUnitPendingGoodsIssueDetail>()
    .Name("gridHandlingUnitPendingGoodsIssueDetails")
    .Columns(columns =>
    {
        columns.Bound(c => c.GoodsIssueReference).Title("PXK").Width(35);
        columns.Bound(c => c.GoodsIssueEntryDate).Title("Ngày, giờ xuất kho").Width(80).Format("{0:" + SettingsManager.DateTimeFormat + "}");
        columns.Bound(c => c.CustomerCode).Title("Mã khách hàng").Width(80);
        columns.Bound(c => c.CustomerName).Title("Tên khách hàng").Width(132);
        columns.Bound(c => c.ReceiverName).Title("Tên đơn vị nhận").Width(132);
        columns.Bound(c => c.CommodityCode).Title("Mã hàng").Width(90);
        columns.Bound(c => c.QuantityRemains).Title("SLXK").Format("{0:n0}").Width(25).HtmlAttributes(new { @class = "grid-number-column" });

        columns.Template(t => { }).Title("&nbsp;").ClientTemplate("<input class='IsSelected' #= IsSelected ? checked='checked':'' #  type='checkbox' />").Width(15);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Template(@<text>
            <div class="toolbar" style="float: right;">
                <label>Nhập số phiếu xuất kho/ hoặc mã, tên khách hàng hay đơn vị, người nhận hàng/ hoặc mã hàng hóa</label>
                <input id="filterText" class="k-textbox" style="text-align: center; padding-right: 13px;" onkeyup="filterText_KeyUp()" />
            </div>
        </text>);
    })
    .Scrollable(s => s.Height(SettingsManager.PopupContentHeightLarge))
    .DataSource(ds => ds.Ajax()
            .Read(read => read.Action("GetPendingGoodsIssueDetails", "HandlingUnitAPIs", new { area = "Inventories" }).Data(@<text>
            function(e) {

                var handlingUnitJSON = window.parent.$("#kendoGridDetails").data("kendoGrid").dataSource.data().toJSON();

                return {
                    locationID: window.parent.requireConfig.pageOptions.LocationID,
                    handlingUnitID: window.parent.$("#HandlingUnitID").val(),
                    goodsIssueID: window.parent.$("#GoodsIssue_GoodsIssueID").val(),
                    customerID: window.parent.$("#Customer_CustomerID").val(),
                    receiverID: window.parent.$("#Receiver_CustomerID").val(),
                    shippingAddress: window.parent.$("#ShippingAddress").val(),
                    goodsIssueDetailIDs : handlingUnitJSON.map(function(elem){return elem.GoodsIssueDetailID;}).join(","),
                    isReadonly: false
            };}
            </text>))
    .ServerOperation(false)) //If this is TRUE: Apply filter to datasource will call Ajax to get new datasource result. If this is FALSE: filter will run on client
    .Selectable()
)

<div class="background-bar" style="height: 45px;">
    <div class="popup-button-bar">
        <button type="button" class="k-button" onclick="okButton_Click()"> <img src="~/Content/Images/Mains/Size24/Actions-bookmark-add-icon-24.png" /> Thêm măt hàng vào phiếu đóng gói</button>
        <button type="button" class="k-button" onclick="cancelButton_Click()"> <img src="~/Content/Images/Mains/Size24/Users-Exit-icon-24.png" /> Thoát </button>
    </div>
</div>

<script src="@Url.Content("~/Scripts/Controllers/Inventories/HandlingUnits/AddHandlingUnitPendingGoodsIssueDetail.js")"></script>

<script type="text/javascript">
    function okButton_Click() {
        handleOKEvent(window.parent.$("#kendoGridDetails").data("kendoGrid").dataSource, $("#gridHandlingUnitPendingGoodsIssueDetails").data("kendoGrid").dataSource);
    }

    $('#gridHandlingUnitPendingGoodsIssueDetails').on('click', '.IsSelected', function () {
        var checked = $(this).is(':checked');
        var grid = $('#gridHandlingUnitPendingGoodsIssueDetails').data().kendoGrid;
        var dataItem = grid.dataItem($(this).closest('tr'));
        dataItem.set('IsSelected', checked);
    })
</script>



<script>
    function filterText_KeyUp() {
        var filterText = $("#filterText").val(), gridDetails = $("#gridHandlingUnitPendingGoodsIssueDetails").data("kendoGrid");

        if (filterText && filterText.length >= "@SettingsManager.AutoCompleteMinLenght") {
            gridDetails.dataSource.filter({
                logic: "or",
                filters: [
                    { field: "GoodsIssueReference", operator: "contains", value: filterText },

                    { field: "CustomerCode", operator: "contains", value: filterText },
                    { field: "CustomerName", operator: "contains", value: filterText },

                    { field: "ReceiverCode", operator: "contains", value: filterText },
                    { field: "ReceiverName", operator: "contains", value: filterText },

                    { field: "CommodityCode", operator: "contains", value: filterText },
                    { field: "CommodityName", operator: "contains", value: filterText }
                ]
            });


        } else {
            if (gridDetails.dataSource.filter() != undefined)
                gridDetails.dataSource.filter({});
        }
    }
</script>