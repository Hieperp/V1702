@using TotalPortal.Configuration

@model TotalPortal.Areas.Inventories.ViewModels.GoodsIssueViewModel

<div id="popupWindow"></div>

<div>
    @(Html.Kendo().Grid<TotalModel.Models.GoodsIssueIndex>()
        .Name("kendoGridIndex")
        .Columns(columns =>
        {
            columns.Bound(p => p.GoodsIssueID).DisplayNameTitle().Hidden();
            columns.Bound(p => p.LocationCode).Title("CN").Width(1);
            columns.Bound(p => p.EntryDate).Title("Ngày").Format("{0:dd/MM/yyyy}").Width(35);
            columns.Bound(p => p.Reference).Title("Stt").Width(20).ClientTemplate("<a href='" + Url.RouteUrl("Default", new { controller = "Inventories/GoodsIssues", action = "Edit" }) + "/#= GoodsIssueID #'>#=Reference#</a>");
            columns.Bound(p => p.DeliveryAdviceReferences).Title("ĐN giao hàng").Width(130);
            columns.Bound(p => p.CustomerName).Title("Khách hàng").Width(231);
            columns.Bound(p => p.ReceiverDescription).Title("Giao hàng").Width(310);

            columns.Bound(p => p.TotalQuantity).Title("Số lượng").Format("{0:n0}").Width(60).HtmlAttributes(new { @class = "grid-number-column" }).Filterable(false).ClientFooterTemplate("#= kendo.format('{0:n0}', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" });

            columns.Bound(p => p.TotalListedGrossAmount).Title("Thành tiền").Format("{0:n0}").HtmlAttributes(new { @class = "grid-number-column" }).Filterable(false).Width(90).ClientFooterTemplate("#= kendo.format('{0:n0}', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" }).Hidden(@ViewBag.ShowDiscount ? true : false);
            columns.Bound(p => p.TotalGrossAmount).Title("Thành tiền").Format("{0:n0}").HtmlAttributes(new { @class = "grid-number-column" }).Filterable(false).Width(90).ClientFooterTemplate("#= kendo.format('{0:n0}', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" }).Hidden(@ViewBag.ShowDiscount ? false : true);

            columns.Template(model => null).Width(88)
                .ClientTemplate("<a class='k-button' style='padding-left:5px; min-width:28px; width:28px' href='" + Url.RouteUrl("Default", new { controller = "Inventories/GoodsIssues", action = "Edit" }) + "/#= GoodsIssueID #'><span class='k-icon k-edit'></span></a> <a class='k-button' style='padding-left:0px; padding-right:0px; min-width:28px; width:28px' href='" + Url.RouteUrl("Default", new { controller = "Inventories/GoodsIssues", action = "Delete" }) + "/#= GoodsIssueID #'><span class='k-icon k-delete'></span></a>");
        })
        .ToolBar(toolbar =>
        {
            toolbar.Template(@<text> <button type="button" class="k-button" onclick="createWizard()"> <img src="~/Content/Images/Mains/Size24/folder-documents-icon-24.png" /> Lập phiếu xuất kho </button> </text>);
        })

        .Pageable()
        .Groupable(g => g.Messages(messages => messages.Empty("Phân nhóm dữ liệu: Kéo và thả tiêu đề một hoặc nhiều cột dữ liệu ngay bên dưới vào đây để phân nhóm hiển thị theo phân cấp của các cột dữ liệu")))
        .Filterable()
        .Selectable()
        .Sortable()
        .Events(e =>
        {
            e.DataBound("hightLightSelectedRow");
        })
        .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("GetGoodsIssueIndexes", "GoodsIssueAPIs"))
            .Sort(sort =>
                {
                    sort.Add(p => p.EntryDate).Descending();
                    sort.Add(p => p.GoodsIssueID).Descending();
                })
            .PageSize(20)
            .Model(model =>
            {
                model.Id(x => x.GoodsIssueID);
                model.Field(m => m.GoodsIssueID).DefaultValue(0);
            })
            .ServerOperation(true)
            .Aggregates(a => a.Add(x => x.TotalQuantity).Sum())
            .Aggregates(a => a.Add(x => x.TotalListedGrossAmount).Sum())
            .Aggregates(a => a.Add(x => x.TotalGrossAmount).Sum())
            )
            .HtmlAttributes(new { @class = "grid-class" })
    )
</div>




<script type="text/javascript">
    function hightLightSelectedRow(e) {
        require(["kindexGrid"], function (kindexGrid) {
            var kindexGridInstance = new kindexGrid("kendoGridIndex");
            kindexGridInstance.setSelectedRow("GoodsIssueID", '@ViewBag.SelectedEntityID');
        });
    }

    function createWizard() {
        require(["kpopupWindow"], function (kpopupWindow) {
            var createWizardWindow = new kpopupWindow();
            createWizardWindow.openWindow($("#popupWindow"), "@Url.Action("CreateWizard", "GoodsIssues")", "Chọn đề nghị giao hàng", "@SettingsManager.PopupWidthLarge", "@SettingsManager.PopupHeightWithTab");
        });
    }

    decoratingKindex = function (idx, elem) {

        var isWarrantyClaim = elem.Approved;
        if (isWarrantyClaim == null || isWarrantyClaim == false) {
            $('tr[data-uid="' + elem.uid + '"]').addClass("isBonus");
        }
    }
</script>