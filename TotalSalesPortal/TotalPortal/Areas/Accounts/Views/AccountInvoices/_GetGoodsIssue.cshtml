@using TotalPortal.Configuration
@using TotalModel.Models;

@(Html.Kendo().Grid<PendingGoodsIssue>()
    .Name("pendingGoodsIssueGrid")
    .Columns(columns =>
    {
        columns.Bound(c => c.GoodsIssueReference).Title("PXK").Width(35);
        columns.Bound(c => c.GoodsIssueCode).Title("Đơn hàng").Width(50);
        columns.Bound(c => c.GoodsIssueEntryDate).Title("Ngày, giờ xuất kho").Width(85).Format("{0:" + SettingsManager.DateTimeFormat + "}");
        columns.Bound(c => c.GoodsIssueCustomerName).Title("Tên khách hàng").Width(190);
        columns.Bound(c => c.ReceiverName).Title("Tên đơn vị nhận").Width(180);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Template(@<text>
        <div class="toolbar" style="float: right;">
            <label>Nhập số phiếu xuất kho/ hoặc mã, tên hoặc MST khách hàng hay đơn vị, người nhận hàng</label>
            <input id="pendingGoodsIssueFilter" class="k-textbox" style="text-align: center; margin-right: 13px;" onkeyup="pendingGoodsIssueFilter_KeyUp()" />
        </div>
        </text>);
    })
        .Scrollable(s => s.Height(SettingsManager.PopupContentHeight))
        .DataSource(ds => ds.Ajax()
            .Read(read => read.Action("GetGoodsIssues", "AccountInvoiceAPIs", new { area = "Accounts" }).Data("onAdditionalGetGoodsIssues"))
            .ServerOperation(true)
        )
        .Selectable()
)

<script type="text/javascript">
    function onAdditionalGetGoodsIssues(e) {
        return {
            locationID: window.parent.requireConfig.pageOptions.LocationID
        };
    }

    function pendingGoodsIssueFilter_KeyUp() {
        var pendingGoodsIssueFilter = $("#pendingGoodsIssueFilter").val(), gridDetails = $("#pendingGoodsIssueGrid").data("kendoGrid");

        if (pendingGoodsIssueFilter && pendingGoodsIssueFilter.length >= "@SettingsManager.AutoCompleteMinLenght") {
            gridDetails.dataSource.filter({
                logic: "or",
                filters: [
                    { field: "GoodsIssueReference", operator: "contains", value: pendingGoodsIssueFilter },

                    { field: "CustomerCode", operator: "contains", value: pendingGoodsIssueFilter },
                    { field: "CustomerName", operator: "contains", value: pendingGoodsIssueFilter },

                    { field: "ReceiverCode", operator: "contains", value: pendingGoodsIssueFilter },
                    { field: "ReceiverName", operator: "contains", value: pendingGoodsIssueFilter },
                    { field: "ReceiverVATCode", operator: "contains", value: pendingGoodsIssueFilter },

                    { field: "GoodsIssueCustomerCode", operator: "contains", value: pendingGoodsIssueFilter },
                    { field: "GoodsIssueCustomerName", operator: "contains", value: pendingGoodsIssueFilter }
                ]
            });


        } else {
            if (gridDetails.dataSource.filter() != undefined)
                gridDetails.dataSource.filter({});
        }
    }

    $("#pendingGoodsIssueGrid").dblclick(function (e) {
        okButton_Click();
    })
</script>
