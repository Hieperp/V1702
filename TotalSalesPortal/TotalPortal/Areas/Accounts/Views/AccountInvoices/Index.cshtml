@using TotalPortal.Configuration

<div id="popupWindow"></div>

<div>
    @(Html.Kendo().Grid<TotalModel.Models.AccountInvoiceIndex>()
        .Name("kendoGridIndex")
        .Columns(columns =>
        {
            columns.Bound(p => p.AccountInvoiceID).DisplayNameTitle().Hidden();
            columns.Bound(p => p.LocationCode).Title("CN").Hidden().Width(10);
            columns.Bound(p => p.EntryDate).Title("Ngày").Format("{0:dd/MM/yyyy}").Width(40);
            columns.Bound(p => p.VATInvoiceNo).Title("HĐ").Width(45).ClientTemplate("<a href='" + Url.RouteUrl("Default", new { controller = "Accounts/AccountInvoices", action = "Edit" }) + "/#= AccountInvoiceID #'>#=VATInvoiceNo#</a>");
            columns.Bound(p => p.VATInvoiceDate).Title("Ngày HĐ").Format("{0:dd/MM/yyyy}").Width(40);
            columns.Bound(p => p.CodeCustomerPO).Title("PO").Width(60);
            columns.Bound(p => p.GoodsIssueReferences).Title("PXK").Width(110);
            columns.Bound(p => p.GoodsIssueEntryDate).Title("Ngày XK").Format("{0:dd/MM/yyyy}").Width(40);
            columns.Bound(p => p.CustomerName).Title("Khách hàng").Width(310);

            columns.Bound(p => p.TotalQuantity).Title("Số lượng").Format("{0:n0}").Width(60).HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right"}).Filterable(false).ClientFooterTemplate("#= kendo.format('{0:n0}', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" });

            columns.Bound(p => p.TotalListedGrossAmount).Title("Thành tiền").Format("{0:n0}").HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right"}).Filterable(false).Width(90).ClientFooterTemplate("#= kendo.format('{0:n0}', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" }).Hidden(@ViewBag.ShowDiscount ? true : false);
            columns.Bound(p => p.TotalGrossAmount).Title("Thành tiền").Format("{0:n0}").HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right"}).Filterable(false).Width(90).ClientFooterTemplate("#= kendo.format('{0:n0}', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" }).Hidden(@ViewBag.ShowDiscount ? false : true);
            
            columns.Template(model => null).HtmlAttributes(new { @class = "grid-column-center" }).Width(170)
                .ClientTemplate("<a class='k-button' style='padding-left:5px; min-width:28px; width:28px' href='" + Url.RouteUrl("Default", new { controller = "Accounts/AccountInvoices", action = "Edit" }) + "/#= AccountInvoiceID #'><span class='k-icon k-edit'></span></a> <a class='k-button' style='padding-left:5px; min-width:28px; width:28px' href='" + Url.RouteUrl("Default", new { controller = "Accounts/AccountInvoices", action = "PrintDetail" }) + "/#= AccountInvoiceID #' target='_blank'><span class='k-icon k-i-folder-add'></span></a> <a class='k-button' style='padding-left:5px; min-width:28px; width:28px' href='" + Url.RouteUrl("Default", new { controller = "Accounts/AccountInvoices", action = "Print" }) + "/#= AccountInvoiceID #' target='_blank'><span class='k-icon k-i-folder-up'></span></a> <a class='k-button' style='padding-left:0px; padding-right:0px; min-width:28px; width:28px' href='" + Url.RouteUrl("Default", new { controller = "Accounts/AccountInvoices", action = "Delete" }) + "/#= AccountInvoiceID #'><span class='k-icon k-delete'></span></a>");

        })
        .ToolBar(toolbar =>
        {
            toolbar.Template(@<text> 
                <button type="button" class="k-button" onclick="createWizard()"> <img src="~/Content/Images/Mains/Size24/folder-documents-icon-24.png" /> Lập hóa đơn </button> 
                <div class="toolbar" style="float: right;">
                    <label>Nhập số hóa đơn, PXK hoặc tên khách hàng để tìm</label>
                    <input id="indexFilterText" class="k-textbox" style="text-align: center; " onkeyup="indexFilterText_KeyUp()" />
                </div>
            </text>);
        })

        .Pageable()
        .Groupable(g => g.Messages(messages => messages.Empty("Phân nhóm dữ liệu: Kéo và thả tiêu đề một hoặc nhiều cột dữ liệu ngay bên dưới vào đây để phân nhóm hiển thị theo phân cấp của các cột dữ liệu")))
        .Filterable()
        .Selectable()
        .Sortable()
        .Events(e =>
        {
            e.DataBound("hightLightSelectedRow");
        })
        .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("GetAccountInvoiceIndexes", "AccountInvoiceAPIs", new { area = "Accounts" }))
            .Sort(sort =>
                {
                    sort.Add(p => p.EntryDate).Descending();
                    sort.Add(p => p.AccountInvoiceID).Descending();
                })
            .PageSize(20)
            .Model(model =>
            {
                model.Id(x => x.AccountInvoiceID);
                model.Field(m => m.AccountInvoiceID).DefaultValue(0);
            })
            .ServerOperation(true)
            .Aggregates(a => a.Add(x => x.TotalQuantity).Sum())
            .Aggregates(a => a.Add(x => x.TotalListedGrossAmount).Sum())
            .Aggregates(a => a.Add(x => x.TotalGrossAmount).Sum())
        )
        .HtmlAttributes(new { @class = "grid-class" })
    )
</div>



<script type="text/javascript">
    function hightLightSelectedRow(e) {
        require(["kindexGrid"], function (kindexGrid) {
            var kindexGridInstance = new kindexGrid("kendoGridIndex");
            kindexGridInstance.setSelectedRow("AccountInvoiceID", @ViewBag.SelectedEntityID);
        });
    }

    function createWizard() {
        require(["kpopupWindow"], function (kpopupWindow) {
            var createWizardWindow = new kpopupWindow();
            createWizardWindow.openWindow($("#popupWindow"), "@Url.Action("CreateWizard", "AccountInvoices")", "Chọn phiếu xuất kho, hoặc khách hàng xuất hóa đơn", "@SettingsManager.PopupWidthLarge", "@SettingsManager.PopupHeightWithTab");
        });
    }







    function indexFilterText_KeyUp() {
        var indexFilterText = $("#indexFilterText").val(), gridDetails = $("#kendoGridIndex").data("kendoGrid");

        if (indexFilterText && indexFilterText.length >= "@SettingsManager.AutoCompleteMinLenght") {
            gridDetails.dataSource.filter({
                logic: "or",
                filters: [
                    { field: "VATInvoiceNo", operator: "contains", value: indexFilterText },
                    { field: "GoodsIssueReferences", operator: "contains", value: indexFilterText },
                    { field: "CustomerName", operator: "contains", value: indexFilterText }
                ]
            });


        } else {
            if (gridDetails.dataSource.filter() != undefined)
                gridDetails.dataSource.filter({});
        }
    }
</script>