@using TotalPortal.Configuration

<div id="popupWindow"></div>

<div>
    @(Html.Kendo().Grid<TotalModel.Models.PromotionIndex>()
        .Name("kendoGridIndex")
        .Columns(columns =>
        {
            columns.Bound(p => p.PromotionID).DisplayNameTitle().Hidden();

            columns.Bound(p => p.Code).Title("Mã KM").Width(150).ClientTemplate("<a href='" + Url.RouteUrl("Default", new { controller = "Commons/Promotions", action = "Edit" }) + "/#= PromotionID #'>#=Code#</a>");

            columns.Bound(p => p.StartDate).Title("Ngày bắt đầu").Width(12).Format("{0:" + SettingsManager.DateTimeFormat + "}").HtmlAttributes(new { @class = "grid-column-center" }).HeaderHtmlAttributes(new { @style = "text-align: center" });
            columns.Bound(p => p.EndDate).Title("Ngày kết thúc").Width(12).Format("{0:" + SettingsManager.DateTimeFormat + "}").HtmlAttributes(new { @class = "grid-column-center" }).HeaderHtmlAttributes(new { @style = "text-align: center" });

            columns.Bound(p => p.DiscountPercent).Title("% CK").Width(5).HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right" }).Format("{0:n1}");
            columns.Bound(p => p.ControlFreeQuantity).Title("SL/ 1 quà tặng").Width(5).HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right" }).Format("{0:n0}");

            columns.Template(t => { }).Title("Tất cả KH").ClientTemplate("<input class='IsSelected' #= ApplyToAllCustomers ? checked='checked':'' #  type='checkbox' />").HtmlAttributes(new { @class = "grid-column-center", @readonly = "readonly" }).HeaderHtmlAttributes(new { @style = "text-align: center" }).Width(5);
            columns.Template(t => { }).Title("Tất cả SP").ClientTemplate("<input class='IsSelected' #= ApplyToAllCommodities ? checked='checked':'' #  type='checkbox' />").HtmlAttributes(new { @class = "grid-column-center", @readonly = "readonly" }).HeaderHtmlAttributes(new { @style = "text-align: center" }).Width(5);
            columns.Template(t => { }).Title("CK 1 dòng").ClientTemplate("<input class='IsSelected' #= ApplyToTradeDiscount ? checked='checked':'' #  type='checkbox' />").HtmlAttributes(new { @class = "grid-column-center", @readonly = "readonly" }).HeaderHtmlAttributes(new { @style = "text-align: center" }).Width(5);

            columns.Template(t => { }).Title("Bán hàng").ClientTemplate("<input class='IsSelected' #= ApplyToSales ? checked='checked':'' #  type='checkbox' />").HtmlAttributes(new { @class = "grid-column-center", @readonly = "readonly" }).HeaderHtmlAttributes(new { @style = "text-align: center" }).Width(5);
            columns.Template(t => { }).Title("Trả hàng").ClientTemplate("<input class='IsSelected' #= ApplyToReturns ? checked='checked':'' #  type='checkbox' />").HtmlAttributes(new { @class = "grid-column-center", @readonly = "readonly" }).HeaderHtmlAttributes(new { @style = "text-align: center" }).Width(5);

            columns.Template(model => null).HtmlAttributes(new { @class = "grid-column-center" }).Width(92)
                .ClientTemplate("<a class='k-button' style='padding-left:5px; min-width:28px; width:28px' href='" + Url.RouteUrl("Default", new { controller = "Commons/Promotions", action = "Void" }) + "/#= PromotionID #'><span class='k-icon k-edit'></span></a> <a class='k-button' style='padding-left:0px; padding-right:0px; min-width:28px; width:28px' href='" + Url.RouteUrl("Default", new { controller = "Commons/Promotions", action = "Print" }) + "/#= PromotionID #'><span class='k-icon k-i-folder-add'></span></a>");
        })
        .ToolBar(toolbar =>
        {
            toolbar.Template(@<text>
                <button type="button" class="k-button" onclick="createWizard()"> <img src="~/Content/Images/New/2017/red-discount-24.png" /> Đăng ký chương trình khuyến mãi mới </button>
                <div class="toolbar" style="float: right;">
                    <label>Nhập kênh khách hàng, mã hoặc tên chương trình khuyến mãi để tìm</label>
                    <input id="indexFilterText" class="k-textbox" style="text-align: center; " onkeyup="indexFilterText_KeyUp()" />
                </div>
            </text>);
        })
        .Pageable()
        .Groupable(g => g.Messages(messages => messages.Empty("Phân nhóm dữ liệu: Kéo và thả tiêu đề một hoặc nhiều cột dữ liệu ngay bên dưới vào đây để phân nhóm hiển thị theo phân cấp của các cột dữ liệu")))
        .Filterable(f => f.Enabled(false))
        .Selectable()
        .Sortable()
        .Events(e =>
        {
            e.DataBound("hightLightSelectedRow");
        })
        .DataSource(dataSource => dataSource
            .Ajax()
            .Group(group => group.AddDescending(p => p.Brand)).Group(group => group.Add(p => p.Category))
            .Read(read => read.Action("GetPromotionIndexes", "PromotionAPIs", new { area = "Commons" }))
            .Sort(sort =>
                {
                    sort.Add(p => p.StartDate);
                    sort.Add(p => p.EndDate);
                })
            .PageSize(20)
            .Model(model =>
            {
                model.Id(x => x.PromotionID);
                model.Field(m => m.PromotionID).DefaultValue(0);
            })
            .ServerOperation(true)
            )
        .HtmlAttributes(new { @class = "grid-class" }))
</div>



<script type="text/javascript">
    function hightLightSelectedRow(e) {
        require(["kindexGrid"], function (kindexGrid) {
            var kindexGridInstance = new kindexGrid("kendoGridIndex");
            kindexGridInstance.setSelectedRow("PromotionID", '@ViewBag.SelectedEntityID');
        });
    }

    function createWizard() {
        require(["kpopupWindow"], function (kpopupWindow) {
            var createWizardWindow = new kpopupWindow();
            createWizardWindow.openWindow($("#popupWindow"), "@Url.Action("CreateWizard", "Promotions")", "Nhập nhãn hàng, mã và tên chương trình mới", @SettingsManager.PopupWidthVoid,  329);
        });
    }


    decoratingKindex = function (idx, elem) {
        if (elem.Approved == null || elem.Approved == false) {
            $('tr[data-uid="' + elem.uid + '"]').addClass("NotApproved");
        }
        else {
            if (elem.InActive != null && elem.InActive == true) {
                $('tr[data-uid="' + elem.uid + '"]').addClass("isBonus");
            }
        }

    }





    function indexFilterText_KeyUp() {
        var indexFilterText = $("#indexFilterText").val(), gridDetails = $("#kendoGridIndex").data("kendoGrid");

        if (indexFilterText && indexFilterText.length >= "@SettingsManager.AutoCompleteMinLenght") {
            gridDetails.dataSource.filter({
                logic: "or",
                filters: [
                    { field: "FilterText", operator: "contains", value: indexFilterText }
                ]
            });


        } else {
            if (gridDetails.dataSource.filter() != undefined)
                gridDetails.dataSource.filter({});
        }
    }

</script>



