@using TotalPortal.Configuration

@model TotalPortal.Areas.Sales.ViewModels.DeliveryAdviceViewModel

<div id="popupWindow"></div>

<div>
    @(Html.Kendo().Grid<TotalModel.Models.DeliveryAdviceIndex>()
            .Name("kendoGridIndex")
            .Columns(columns =>
            {
                columns.Bound(p => p.DeliveryAdviceID).DisplayNameTitle().Hidden();
                columns.Bound(p => p.LocationCode).Title("CN").Width(1);
                columns.Bound(p => p.EntryDate).Title("Ngày").Format("{0:dd/MM/yyyy}").Width(35);

                columns.Bound(p => p.Reference).Title("Số Phiếu").Width(20).ClientTemplate("<a href='" + Url.RouteUrl("Default", new { controller = "Sales/DeliveryAdvices", action = "Edit" }) + "/#= DeliveryAdviceID #'>#=Reference#</a>");
                columns.Bound(p => p.CustomerName).Title("Khách hàng").Width(215);
                columns.Bound(p => p.ReceiverDescription).Title("Giao hàng").Width(260);
                columns.Bound(p => p.VoidTypeName).Title("Hủy đh").Width(130);

                columns.Bound(p => p.GrandTotalQuantity).Title("Đặt hàng").Format("{0:n0}").HtmlAttributes(new { @class = "grid-number-column" }).Filterable(false).Width(60).ClientFooterTemplate("#= kendo.format('{0:n0}', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" });
                columns.Bound(p => p.GrandTotalQuantityIssue).Title("Xuất kho").Format("{0:n0}").HtmlAttributes(new { @class = "grid-number-column" }).Filterable(false).Width(60).ClientFooterTemplate("#= kendo.format('{0:n0}', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" });
                columns.Bound(p => p.TotalListedGrossAmount).Title("Thành tiền").Format("{0:n0}").HtmlAttributes(new { @class = "grid-number-column" }).Filterable(false).Width(90).ClientFooterTemplate("#= kendo.format('{0:n0}', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" }).Hidden(@ViewBag.ShowDiscount ? true : false);
                columns.Bound(p => p.TotalGrossAmount).Title("Thành tiền").Format("{0:n0}").HtmlAttributes(new { @class = "grid-number-column" }).Filterable(false).Width(90).ClientFooterTemplate("#= kendo.format('{0:n0}', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" }).Hidden(@ViewBag.ShowDiscount ? false : true);

                columns.Template(model => null).Width(92)
                    .ClientTemplate("<a class='k-button' style='padding-left:5px; min-width:28px; width:28px' href='" + Url.RouteUrl("Default", new { controller = "Sales/DeliveryAdvices", action = "Void" }) + "/#= DeliveryAdviceID #'><span class='k-icon k-edit'></span></a> <a class='k-button' style='padding-left:0px; padding-right:0px; min-width:28px; width:28px' href='" + Url.RouteUrl("Default", new { controller = "Sales/DeliveryAdvices", action = "Print" }) + "/#= DeliveryAdviceID #'><span class='k-icon k-i-folder-add'></span></a>");
            })
            .ToolBar(toolbar =>
            {
                toolbar.Template(@<text> <button type="button" class="k-button" onclick="createWizard()"> <img src="~/Content/Images/Mains/Size24/folder-documents-icon-24.png" /> Lập đề nghị giao hàng </button> </text>);
            })
                    .Pageable()
                    .Groupable(g => g.Messages(messages => messages.Empty("Phân nhóm dữ liệu: Kéo và thả tiêu đề một hoặc nhiều cột dữ liệu ngay bên dưới vào đây để phân nhóm hiển thị theo phân cấp của các cột dữ liệu")))
                    .Filterable()
                    .Selectable()
                    .Sortable()
                    .Events(e =>
                    {
                        e.DataBound("hightLightSelectedRow");
                    })
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .Read(read => read.Action("GetDeliveryAdviceIndexes", "DeliveryAdviceAPIs", new { area = "Sales" }))
                        .Sort(sort =>
                            {
                                sort.Add(p => p.EntryDate).Descending();
                                sort.Add(p => p.DeliveryAdviceID).Descending();
                            })
                        .PageSize(20)
                        .Model(model =>
                        {
                            model.Id(x => x.DeliveryAdviceID);
                            model.Field(m => m.DeliveryAdviceID).DefaultValue(0);
                        })
                        .ServerOperation(true)
                        .Aggregates(a => a.Add(x => x.GrandTotalQuantity).Sum())
                        .Aggregates(a => a.Add(x => x.GrandTotalQuantityIssue).Sum())
                        .Aggregates(a => a.Add(x => x.TotalListedGrossAmount).Sum())
                        .Aggregates(a => a.Add(x => x.TotalGrossAmount).Sum())
                        )
                    .HtmlAttributes(new { @class = "grid-class" }))
</div>



<script type="text/javascript">
    function hightLightSelectedRow(e) {
        require(["kindexGrid"], function (kindexGrid) {
            var kindexGridInstance = new kindexGrid("kendoGridIndex");
            kindexGridInstance.setSelectedRow("DeliveryAdviceID", '@ViewBag.SelectedEntityID');
        });
    }

    function createWizard() {
        require(["kpopupWindow"], function (kpopupWindow) {
            var createWizardWindow = new kpopupWindow();
            createWizardWindow.openWindow($("#popupWindow"), "@Url.Action("CreateWizard", "DeliveryAdvices")", "Chọn khách hàng, chương trình khuyến mãi áp dụng cho khách hàng", "@SettingsManager.PopupWidth", "@SettingsManager.PopupHeightWithTab");
        });
    }


    decoratingKindex = function (idx, elem) {

        var isWarrantyClaim = elem.InActive;
        if (isWarrantyClaim != null && isWarrantyClaim == true) {
            $('tr[data-uid="' + elem.uid + '"]').addClass("isBonus");
        }

        isWarrantyClaim = elem.InActivePartial;
        if (isWarrantyClaim != null && isWarrantyClaim == true) {
            $('tr[data-uid="' + elem.uid + '"]').addClass("isBonus1");
        }
    }

</script>



