@using TotalPortal.Configuration

@model TotalDTO.Commons.ICustomerBaseDTO

@Html.HiddenFor(model => model.CustomerID)
@Html.Hidden("TempCodeAndName", (@Model != null ? @Model.CodeAndName : ""))


<div class="right-first-panel">
    <div class="form-group">
        <div class="right-panel-label right-panel-label-icon-only" style="padding-top: 2px;"> <img src="~/Content/Images/Mains/@(ViewData["CustomerIcon"] != null ? ViewData["CustomerIcon"] : "Customer Blue 24.png")" title="@(ViewData["CustomerDisplayName"] != null ? ViewData["CustomerDisplayName"] : "Khách hàng")" />  </div>
        <div class="div-input">

            @(Html.Kendo().AutoCompleteFor(model => model.CodeAndName)
                .DataTextField("CodeAndName")
                .Filter("contains")
                .MinLength(SettingsManager.AutoCompleteMinLenght)
                .Placeholder((ViewData["CustomerDisplayName"] != null ? (ViewData["CustomerDisplayName"]).ToString() : "Vui lòng chọn khách hàng"))
                .HeaderTemplate("<div class=\"dropdown-header general-custom-header customer-custom-header\">" +
                        "<span class=\"k-widget k-header\">Tên</span>" +
                        "<span class=\"k-widget k-header\">Địa chỉ</span>" +
                        "</div>")
                .Template("<div class=\"dropdown-body general-custom-body customer-custom-body\">" +
                        "<span class=\"k-state-default\"><p>#: data.CodeAndName #</p></span>" +
                        "<span class=\"k-state-default\"><p>#: data.BillingAddress + data.EntireTerritoryEntireName #</p></span>" +
                        "</div>")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("SearchCustomers", "CustomerAPIs", new { area = "Commons" }).Data(@<text> function(e) {return {searchText: e.filter.filters[0].value};} </text>);//Send parameter to controller search action
                    })
                    .ServerFiltering(true);
                })
                        .Events(e =>
                        {
                            e.Select("customer_Select");
                            e.DataBound("customer_DataBound");
                        })
                        .HtmlAttributes(new { @class = "right-panel-input customerBase_AutoComplete" })
            )

        </div>
        <div class="div-validation-message">
            @Html.ValidationMessageFor(model => model.CodeAndName, "", new { @class = "text-danger" })
        </div>
    </div>
</div>


@Html.Partial("~/Views/Helpers/Commons/_CustomerDescription.cshtml")



<script type="text/javascript">

    getCustomerModelID = function (modelID) {
        return modelID.substring(0, modelID.length - 11); //At first: Pass: modelID = this.element.attr('id') = 'Customer_CodeAndName', Then: Return: ('Customer_CodeAndName').substring(0, modelID.length - 11) = 'Customer_'
    }

    customer_DataBound = function (e) {
        var modelID = getCustomerModelID(this.element.attr('id'));
        $(".k-animation-container:has(#" + modelID + "CodeAndName-list)").css("width", "746");
        $("#" + modelID + "CodeAndName-list").css("width", "746");
    }

    customer_Select = function (e) {
        var modelID = getCustomerModelID(this.element.attr('id'));

        var dataItem = e.sender.dataItem(e.item.index());

        //Set input data to POST
        $("#" + modelID + "CustomerID").val(dataItem.CustomerID);
        $("#" + modelID + "Code").val(dataItem.Code);
        $("#" + modelID + "Name").val(dataItem.Name);
        $("#" + modelID + "OfficialName").val(dataItem.OfficialName);
        $("#" + modelID + "Birthday").val(dataItem.Birthday == null ? null : kendo.toString(new Date(parseInt(dataItem.Birthday.replace(/[A-Za-z$--/]/g, ''))), "@SettingsManager.DateFormat"));
        $("#" + modelID + "VATCode").val(dataItem.VATCode);
        $("#" + modelID + "Telephone").val(dataItem.Telephone);
        $("#" + modelID + "BillingAddress").val(dataItem.BillingAddress);
        $("#" + modelID + "ShippingAddress").val(dataItem.ShippingAddress);
        $("#" + modelID + "TerritoryID").val(dataItem.TerritoryID);
        $("#" + modelID + "EntireTerritoryEntireName").val(dataItem.EntireTerritoryEntireName);
        $("#" + modelID + "SalespersonID").val(dataItem.SalespersonID);
        $("#" + modelID + "SalespersonName").val(dataItem.SalespersonName);
        $("#" + modelID + "PaymentTermID").val(dataItem.PaymentTermID);
        $("#" + modelID + "PriceCategoryID").val(dataItem.PriceCategoryID);
        $("#" + modelID + "PriceCategoryCode").val(dataItem.PriceCategoryCode);
        $("#" + modelID + "ShowDiscount").val(dataItem.ShowDiscount);

        //Set display label
        $("#" + modelID + "label_Telephone").text(dataItem.Telephone);
        $("#" + modelID + "label_VATCode").text(dataItem.VATCode == null ? "" : dataItem.VATCode);
        $("#" + modelID + "label_BillingAddress").text(dataItem.BillingAddress);
        $("#" + modelID + "label_EntireTerritoryEntireName").text(dataItem.EntireTerritoryEntireName);

        //Remember last AutoComplete value
        $("#" + modelID + "TempCodeAndName").val(dataItem.CodeAndName);

        //Trigger change event. This event is not used in this editor template. It will be catch out side of this editor template (Currently, this change event customerID is used to load promotion list for selected customer)
        $("#" + modelID + "CustomerID").trigger("change");
    }

    $(".customerBase_AutoComplete").focusout(function (e) {
        var modelID = getCustomerModelID(this.id);
        $(this).val($("#" + modelID + "TempCodeAndName").val());
    });

</script>


<style>
    /*#region styles for calculate span column with*/

    /*Rule to calculate with:
    1) Define column for each body span column
    2) Header:
        2.1) All header span column width = the same body span column width
        2.2) Except: Last header width = Last body pan width + 10 (padding left 5, padding right 5 of .k-item) + 17 (17px is the scroll bar width)
        2.3) Total header width = Sum (all header pan width): Using this total value => assign to .k-animation-container .css("width", "Total header span column width") AT the DataBound Events
    */


    .customer-custom-header > span:first-child {
        width: 505px;
    }

    .customer-custom-header > span:last-child {
        width: 241px; /*241px*/
    }






    .k-item > .customer-custom-body > span:first-child {
        width: 495px;
    }

    .k-item > .customer-custom-body > span:last-child {
        width: 224px;
    }

    /*#endregion */




    /*#region styles for each use of the Editor tenplate CustomerBase.cshtml*/
    #Customer_CodeAndName-list .k-item {
        white-space: nowrap;
    }
    /*CURRENT: Editor tenplate CustomerBase.cshtml bind with model Customer => the autocomplete editor ID will be #Customer_CodeAndName */
    /*LATER: if this Editor tenplate CustomerBase.cshtml is used for another model, Ex model: Receiver => the ID will be #Receiver_CodeAndName, then new css will be add. for this example #Receiver_CodeAndName-list .k-item {padding: 0px; white-space: nowrap;} */

    /*#endregion */
</style>
