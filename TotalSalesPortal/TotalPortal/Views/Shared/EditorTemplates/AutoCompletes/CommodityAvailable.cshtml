@using TotalPortal.Configuration

@model string

@(Html.Kendo().AutoCompleteFor(m => m)
        .Name("CommodityCode")
        .DataTextField("CommodityCode")
        .Filter("contains")
        .MinLength(SettingsManager.AutoCompleteMinLenght)
        .Placeholder("Nhập tên hoặc mã hàng ...")
        .HeaderTemplate("<div class=\"dropdown-header general-custom-header commodity-custom-header\">" +
                "<span class=\"k-widget k-header\">Mã</span>" +
                "<span class=\"k-widget k-header\">Kho</span>" +
                "<span class=\"k-widget k-header\">SL tồn</span>" +
                "<span class=\"k-widget k-header\">&#10004;</span>" +
                "</div>")
        .Template("<div class=\"dropdown-body general-custom-body commodity-custom-body\">" +
                "<span class=\"k-state-default\"><p>#: data.CommodityCode #</p></span>" +
                "<span class=\"k-state-default\"><p>#: data.WarehouseCode #</p></span>" +
                        "<span class=\"k-state-default\"><p>#: kendo.format('{0:n0}', data.QuantityAvailable) #</p></span>" +
                "<span class=\"k-state-default\"><input type=\"checkbox\" #= data.Bookable ? checked='checked' :'' #></span>" +
                "</div>")
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetCommodityAvailables", "CommodityAPIs", new { area = "Commons" }).Data(@<text>

                    function (e) {
                    return {
                    locationID: requireConfig.pageOptions.LocationID,
                    customerID: $("#Customer_CustomerID").val(),
                    priceCategoryID: $("#PriceCategoryID").val(),
                    promotionID: $("#Promotion_PromotionID").val(),
                    entryDate: $("#EntryDate").data("kendoDateTimePicker").value().toUTCString(),
                    searchText: $("#CommodityCode").data("kendoAutoComplete").value()
                    };}

                </text>);
            })
            .ServerFiltering(true);
        })
        .Events(e =>
        {
            e.Select("commoditiesInWarehousesSelect");
            e.Change("commoditiesInWarehousesChange");

            e.DataBound("commoditiesInWarehousesDataBound");
        })
        .Value(Model)
        .HtmlAttributes(new { @class = "custom-control" })
)

<script type="text/javascript">
    $("#CommodityCode").focus(function (e) {
        window.commodityCodeBeforeChange = $("#CommodityCode").val();
    });
</script>


<style>
/*#region styles for calculate span column with*/
   
    /*Rule to calculate with:
        1) Define column for each body span column
        2) Header: 
            2.1) All header span column width = the same body span column width
            2.2) Except: Last header width = Last body pan width + 10 (padding left 5, padding right 5 of .k-item) + 17 (17px is the scroll bar width) 
            2.3) Total header width = Sum (all header pan width): Using this total value => assign to .k-animation-container .css("width", "Total header span column width") AT the DataBound Events
    */


.commodity-custom-header > span:first-child {
    width: 195px;
}
.commodity-custom-header > span:nth-child(2) {
    width: 80px;
}
.commodity-custom-header > span:nth-child(3) {
    width: 60px;
    text-align: right;
    padding-right: 6px;
}
.commodity-custom-header > span:last-child {
    width: 47px;
}






.k-item > .commodity-custom-body > span:first-child {
    width: 195px;
}
.k-item > .commodity-custom-body > span:nth-child(2) {
    width: 80px;
}
.k-item > .commodity-custom-body > span:nth-child(3) {
    width: 60px;
    text-align: right;
    padding-right: 6px;
}


.k-item > .commodity-custom-body > span:last-child {
    width: 20px;
}

/*#endregion */


/*#region styles for each use of the Editor tenplate CommodityAvailable.cshtml*/    
#CommodityCode-list .k-item {
    white-space: nowrap;
}
    /*CURRENT: Editor tenplate CommodityAvailable.cshtml bind with model CommodityCode => the autocomplete editor ID will be #CommodityCode */
    /*LATER: if this Editor tenplate CommodityAvailable.cshtml is used for another model, Ex model: XyzName => the ID will be #XyzName, then new css will be add. for this example #XyzName-list .k-item {padding: 0px; white-space: nowrap;} */

/*#endregion */

</style>



